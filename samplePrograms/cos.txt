// Pi
var pi : real = 3.1415926535897932;
// Cosine function
def cos(x : real) : real {
        set x=pi *x/180.0;
    // Positive integer power
    def pow(x : real, n : int) : real {
        var y : real = 1;
        while(n > 0){
            set y = y*x;
            set n = n-1;
        }
        return y;
    }
    // Factorial
    def fac(n : int) : int {
        if (n == 0) { return 1; } else { return n * fac(n-1); }
    }
    // Take 8 terms of Maclaurin series for cos(x)
    var k : int = 0;
    var cos_x : real = 0;
        print("\n");
    while(k < 8){
         set cos_x = cos_x + pow( -1.0, k) * pow(x, 2*k) / fac(2*k);
         set k = k + 1;
    }
    return cos_x;
}
var angle :real=0;
while(angle<=180){
	var coss: real=cos(angle);
	print("value of cos  ( ");
        print(angle);
	print(") =");
        print(coss);
        print("\n");
        set angle=angle+30;

}
